examples for eyes17
Index: expeyes/eyes17/html/editor.html
===================================================================
--- expeyes.orig/eyes17/html/editor.html
+++ expeyes/eyes17/html/editor.html
@@ -1,4 +1,7 @@
-<ul>
-<li><p>Write your own Python code to access ExpEYES-17</p></li>
-<li><p>Use all function from the eyes17 module</p></li>
-</ul>
+<p>You can run python code here to access the eyes17 hardware.
+But this has restrictions, like the output to the console will
+appear only in the end.</p>
+<p>To run proper python programs to access eyes17, copy the directory
+'/usr/share/eyes17/examples' to the home directory to run the examples.
+You should exit this GUI before that, the hardware can be accessed by only one
+program at a time.</p>
Index: expeyes/eyes17/examples/FourierTransform.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/FourierTransform.py
@@ -0,0 +1,22 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+import eyes17.eyemath17 as em
+
+p.set_sine(1000)
+p.set_sqr1(500)
+
+t,v, tt,vv = p.capture2(5000, 20)   # captures A1 and A2
+
+xlabel('Freq')
+ylabel('Amplitude')
+xlim([0,10000])
+
+xa,ya = em.fft(v,20*0.001)
+plot(xa,ya, linewidth = 2, color = 'blue')
+
+xa,ya = em.fft(vv, 20*0.001)
+plot(xa, ya, linewidth = 2, color = 'red')
+
+show()
Index: expeyes/eyes17/examples/RCdifferentiation.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/RCdifferentiation.py
@@ -0,0 +1,20 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_wave(50,'tria')
+p.select_range('A1',4)
+p.select_range('A2',4)
+
+t,v, tt,vv = p.capture2(500, 100)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,1], [0,0], 'black')
+ylim([-4,4])
+
+plot(t,v,linewidth = 2, color = 'blue')
+plot(tt, vv, linewidth = 2, color = 'red')
+
+show()
Index: expeyes/eyes17/examples/RCintegration.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/RCintegration.py
@@ -0,0 +1,20 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_wave(500,'tria')
+p.select_range('A1',4)
+p.select_range('A2',4)
+
+t,v, tt,vv = p.capture2(500, 20)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,10], [0,0], 'black')
+ylim([-4,4])
+
+plot(t,v,linewidth = 2, color = 'blue')
+plot(tt, vv, linewidth = 2, color = 'red')
+
+show()
Index: expeyes/eyes17/examples/RCsteadyState.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/RCsteadyState.py
@@ -0,0 +1,19 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+set_sine(200)
+set_pv1(1.35)       # will clip at 1.35 + diode drop
+
+t,v, tt,vv = capture2(500, 20)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,10], [0,0], 'black')
+ylim([-4,4])
+
+plot(t,v,linewidth = 2, color = 'blue')
+plot(tt, vv, linewidth = 2, color = 'red')
+
+show()
Index: expeyes/eyes17/examples/RCtransient.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/RCtransient.py
@@ -0,0 +1,17 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+import time
+
+p.set_state(OD1=0)			# OD1 to LOW
+time.sleep(.5)
+t,v = p.capture_action('A1', 100, 5, 'SET_HIGH')
+plot(t,v,linewidth = 2, color = 'blue')
+
+p.set_state(OD1=1)			# OD1 to LOW
+time.sleep(.5)
+t,v = p.capture_action('A1', 100, 5, 'SET_LOW')
+
+plot(t,v,linewidth = 2, color = 'red')
+show()
Index: expeyes/eyes17/examples/RLtransient.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/RLtransient.py
@@ -0,0 +1,17 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+import time
+
+
+plot([0,.5], [0,0], color='black')
+ylim([-5,5])
+
+
+p.set_state(OD1=1)			# OD1 to LOW
+time.sleep(.5)
+t,v = p.capture_action('A1', 100, 5, 'SET_LOW')
+
+plot(t,v,linewidth = 2, color = 'red')
+show()
Index: expeyes/eyes17/examples/capture1.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/capture1.py
@@ -0,0 +1,7 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+x,y = p.capture1('A1',10,10)
+plot(x,y)
+show()
Index: expeyes/eyes17/examples/capture2.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/capture2.py
@@ -0,0 +1,18 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_sine(200)
+
+t,v, tt,vv = p.capture2(500, 20)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,10], [0,0], 'black')
+ylim([-4,4])
+
+plot(t,v,linewidth = 2, color = 'blue')
+plot(tt, vv, linewidth = 2, color = 'red')
+
+show()
Index: expeyes/eyes17/examples/capture4.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/capture4.py
@@ -0,0 +1,12 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_sine(200)
+
+res = p.capture4(500, 20)   # captures A1, A2,A3 and MIC
+
+plot(res[0], res[1], linewidth = 2, color = 'blue')
+plot(res[6], res[7], linewidth = 2, color = 'red')
+show()
Index: expeyes/eyes17/examples/clamping.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/clamping.py
@@ -0,0 +1,26 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_sine(200)
+p.set_pv1(1.7)       # will clamp at 2.0 + diode drop
+
+maxV = 8
+
+p.select_range('A1', maxV)
+p.select_range('A2', maxV)
+
+t,v, tt,vv = p.capture2(500, 20)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,10], [0,0], 'black')
+ylim([-maxV, maxV])
+
+plot(t,v,linewidth = 2, color = 'blue', label='Input')
+plot(tt, vv, linewidth = 2, color = 'red', label='Clamped')
+
+legend(framealpha=0.5)
+
+show()
Index: expeyes/eyes17/examples/clipping.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/clipping.py
@@ -0,0 +1,19 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_sine(200)
+p.set_pv1(1.35)       # will clip at 1.35 + diode drop
+
+t,v, tt,vv = p.capture2(500, 20)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,10], [0,0], 'black')
+ylim([-4,4])
+
+plot(t,v,linewidth = 2, color = 'blue')
+plot(tt, vv, linewidth = 2, color = 'red')
+
+show()
Index: expeyes/eyes17/examples/digoutputs.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/digoutputs.py
@@ -0,0 +1,13 @@
+'''
+Connect OD1 to A1
+'''
+
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+#connect OD1 to A1
+p.set_state(OD1 = 1 )        # set OD1 to HIGH
+print p.get_voltage('A1')
+
+p.set_state(OD1 = 0 )        # set OD1 to HIGH
+print p.get_voltage('A1')
Index: expeyes/eyes17/examples/diodeIV.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/diodeIV.py
@@ -0,0 +1,21 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+voltage = []
+current = []
+
+v = 0.0
+while v <= 5.0:
+  va = set_pv1(v)
+  vd = get_voltage('A1')
+  i = (va-vd)/1.0         # current in milli Amps
+  voltage.append(vd)
+  current.append(i)
+  v = v + 0.050    # 50 mV step
+
+xlabel('Voltage')
+ylabel('Current')
+plot(voltage, current, linewidth = 2)
+show()
Index: expeyes/eyes17/examples/fullwave.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/fullwave.py
@@ -0,0 +1,19 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+
+p.set_sine(200)
+
+res = p.capture4(500, 20)   # captures A1 and A2
+
+xlabel('Time(mS)')
+ylabel('Voltage(V)')
+plot([0,10], [0,0], 'black')
+ylim([-4,4])
+
+plot(res[0], res[1], linewidth = 2, color = 'blue')
+plot(res[2], res[3], linewidth = 2, color = 'red')
+plot(res[4], res[5], linewidth = 2, color = 'magenta')
+
+show()
Index: expeyes/eyes17/examples/loadTable.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/loadTable.py
@@ -0,0 +1,15 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+# Connect WG to A1
+
+from pylab import *
+
+x = arange(-256, 256)
+x = abs(x)
+p.load_table(x)
+p.set_wave(400)
+
+x,y = p.capture1('A1', 500,10)
+plot(x,y)
+show()
Index: expeyes/eyes17/examples/measure_RandC.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/measure_RandC.py
@@ -0,0 +1,13 @@
+'''
+Measures capacitance in the range of pico Farads
+'''
+
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+#connect Capacitor from IN1 to GND
+print p.get_capacitance()
+
+#connect an LDR  from SEN to GND
+print p.get_resistance()
+
Index: expeyes/eyes17/examples/multi_r2rtime.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/multi_r2rtime.py
@@ -0,0 +1,12 @@
+'''
+multi_r2rtime(input, ncycles) returns the microseconds elapsed between two rising edges.
+ncycles is the number of cycles to be measured.
+'''
+
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+p.set_sqr1(1000)               # set 1kHz on  SQR1
+t = p.multi_r2rtime('IN2')    # 6 is the readback of SQR1. Time of 10 cycles
+
+print t, 'Frequency = ', (1.0/t)
Index: expeyes/eyes17/examples/npnTransferChar.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/npnTransferChar.py
@@ -0,0 +1,23 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+from pylab import *
+vcc = p.set_pv1(4.8)
+
+iba = []
+ica = []
+
+pv2 = 0.8
+while pv2 <= 3:
+	p.set_pv2(pv2)
+	a2 = p.get_voltage('A2')
+	ib = (pv2-a2)/100e3
+
+	a1 =  p.get_voltage('A1')
+	ic = (vcc - a1)/1000
+	iba.append(ib)
+	ica.append(ic)
+	print (ib, ic)
+	pv2 += 1
+plot(iba,ica)
+show()
Index: expeyes/eyes17/examples/r2ftime.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/r2ftime.py
@@ -0,0 +1,15 @@
+'''
+r2ftime(in1, in2) returns the microseconds elapsed from a rising edge on input1 to a falling edge of input2,
+they could be the same
+'''
+
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+p.set_sqr1(1000,30)        # set 1kHz squarewave, 30% duty cycle
+
+print p.r2ftime('IN2', 'IN2')
+
+p.set_sqr1(1000,60)        # set 1kHz squarewave, 60% duty cycle
+
+print p.r2ftime('IN2', 'IN2')
Index: expeyes/eyes17/examples/readInputs.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/readInputs.py
@@ -0,0 +1,6 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+print (p.get_voltage('A1'))
+print (p.get_voltage('A2'))
+print (p.get_voltage('A3'))
Index: expeyes/eyes17/examples/setVoltages.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/setVoltages.py
@@ -0,0 +1,12 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+# Connect PV1 to A1 and PV2 to A2, using two wires
+
+
+print (p.set_pv1(2.5))
+print (p.set_pv2(1))
+
+print (p.get_voltage('A1'))
+print (p.get_voltage('A2'))
+
Index: expeyes/eyes17/examples/setWave.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/setWave.py
@@ -0,0 +1,16 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+# Connect WG to A1
+
+from pylab import *
+
+p.set_wave(100)
+x,y = p.capture1('A1', 500,50)
+plot(x,y)
+
+p.set_wave(100, 'tria')
+x,y = p.capture1('A1', 500,50)
+plot(x,y)
+
+show()
Index: expeyes/eyes17/examples/table.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/table.py
@@ -0,0 +1,16 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+# Connect WG to A1
+
+from pylab import *
+
+def f1(x):                         #
+	return sin(x) + sin(3*x)/3
+
+p.load_table(abs(arange(-256,256)))
+p.set_wave(400)
+
+x,y = p.capture1('A1', 500,10)
+plot(x,y)
+show()
Index: expeyes/eyes17/examples/triangularWave.py
===================================================================
--- /dev/null
+++ expeyes/eyes17/examples/triangularWave.py
@@ -0,0 +1,11 @@
+import eyes17.eyes
+p = eyes17.eyes.open()
+
+# Connect WG to A1
+
+from pylab import *
+
+p.set_wave(500,'tria')
+x,y = p.capture1('A1', 500,10)
+plot(x,y)
+show()
